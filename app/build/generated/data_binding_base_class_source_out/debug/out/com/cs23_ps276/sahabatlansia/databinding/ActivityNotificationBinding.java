// Generated by view binder compiler. Do not edit!
package com.cs23_ps276.sahabatlansia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cs23_ps276.sahabatlansia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView addTask;

  @NonNull
  public final ImageView calendar;

  @NonNull
  public final ImageView noDataImage;

  @NonNull
  public final RecyclerView taskRecycler;

  private ActivityNotificationBinding(@NonNull LinearLayout rootView, @NonNull TextView addTask,
      @NonNull ImageView calendar, @NonNull ImageView noDataImage,
      @NonNull RecyclerView taskRecycler) {
    this.rootView = rootView;
    this.addTask = addTask;
    this.calendar = calendar;
    this.noDataImage = noDataImage;
    this.taskRecycler = taskRecycler;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addTask;
      TextView addTask = ViewBindings.findChildViewById(rootView, id);
      if (addTask == null) {
        break missingId;
      }

      id = R.id.calendar;
      ImageView calendar = ViewBindings.findChildViewById(rootView, id);
      if (calendar == null) {
        break missingId;
      }

      id = R.id.noDataImage;
      ImageView noDataImage = ViewBindings.findChildViewById(rootView, id);
      if (noDataImage == null) {
        break missingId;
      }

      id = R.id.taskRecycler;
      RecyclerView taskRecycler = ViewBindings.findChildViewById(rootView, id);
      if (taskRecycler == null) {
        break missingId;
      }

      return new ActivityNotificationBinding((LinearLayout) rootView, addTask, calendar,
          noDataImage, taskRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
